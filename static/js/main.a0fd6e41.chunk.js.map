{"version":3,"sources":["Todo.js","App.js","index.js"],"names":["Todo","text","completed","index","updateTodo","addTodo","deleteTodo","useState","visible","setVisible","useEffect","className","type","checked","onChange","autoFocus","e","target","value","onKeyDown","key","onClick","setTimeout","App","data","localStorage","getItem","JSON","parse","list","setList","filteredList","filter","todo","setItem","stringify","id","newTodo","newList","map","todoList","length","ReactDOM","render","document","getElementById"],"mappings":"mPAGe,SAASA,EAAT,GAA4E,IAA5DC,EAA2D,EAA3DA,KAAMC,EAAqD,EAArDA,UAAWC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,WAAYC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WACxE,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAUAC,qBAAU,WACND,GAAW,KACZ,IAOH,OACI,sBAAKE,UAAWH,EAAU,cAAgB,OAA1C,UACI,uBACIG,UAAU,WACVC,KAAK,WACLC,QAASX,EACTY,SAAU,kBAAMV,EAAWD,EAAOF,GAAOC,MAE7C,uBACIa,WAAS,EACTD,SAAU,SAACE,GAAD,OAAOZ,EAAWD,EAAOa,EAAEC,OAAOC,MAAOhB,IACnDiB,UA3BU,SAACH,GACL,UAAVA,EAAEI,KACFf,KA0BIM,UAAWT,EAAY,WAAa,GACpCgB,MAAOjB,IAEX,sBAAMU,UAAU,OAAOU,QAnBX,WAChBC,YAAW,kBAAMhB,EAAWH,KAAQ,KACpCM,GAAW,IAiBP,qBCjCG,SAASc,IAEpB,IAAMC,EAAOC,aAAaC,QAAQ,QAClC,EAAwBnB,mBAAUiB,EAAQG,KAAKC,MAAMJ,GAAQ,IAA7D,mBAAOK,EAAP,KAAaC,EAAb,KAGApB,qBAAW,WAEP,IAAMqB,EAAeF,EAAKG,QAAO,SAAAC,GAAI,MAAkB,KAAdA,EAAKhC,QAC9CwB,aAAaS,QAAQ,OAAQP,KAAKQ,UAAUJ,OAIhD,IAAM1B,EAAU,WACZyB,EAAQ,GAAD,mBAAKD,GAAL,CAAW,CAAC,KAAQ,GAAI,WAAa,OAI1CzB,EAAa,SAACgC,EAAIC,EAASnC,GAC7B,IAAMoC,EAAUT,EAAKU,KAAI,SAACN,EAAM9B,GAC5B,OAAIA,IAAUiC,EACH,CAAC,KAAQC,EAAS,UAAanC,GAEnC+B,KAEXH,EAAQQ,IAINhC,EAAa,SAAC8B,GAChBN,EAAQD,EAAKG,QAAO,SAACC,EAAM9B,GAAP,OAAiBA,IAAUiC,OAO7CI,EAA4B,IAAhBX,EAAKY,OAAgB,2CAAoBZ,EAAKU,KAAI,SAACN,EAAM9B,GAAP,OAChE,cAAC,EAAD,CACIA,MAAOA,EACPF,KAAMgC,EAAKhC,KACXC,UAAW+B,EAAK/B,UAChBE,WAAYA,EACZC,QAASA,EACTC,WAAYA,GANLH,MAUf,OACI,sBAAKQ,UAAU,gDAAf,UACI,4CAAmB,uBACnB,8BACK6B,IAEL,wBAAQnB,QAAShB,EAASM,UAAU,eAApC,kBCrDZ+B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a0fd6e41.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Todo.css\";\r\n\r\nexport default function Todo({ text, completed, index, updateTodo, addTodo, deleteTodo }) {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    // Creates a new todo when user hits the enter key\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            addTodo();\r\n        }\r\n    }\r\n\r\n    // Sets visible to true when the component is mounted\r\n    useEffect(() => {\r\n        setVisible(true);\r\n    }, [])\r\n\r\n    // Sets visible to false when the component is unmounted\r\n    const handleClick = () => {\r\n        setTimeout(() => deleteTodo(index), 300);\r\n        setVisible(false);\r\n    }\r\n    return (\r\n        <div className={visible ? \"Todo active\" : \"Todo\"}>\r\n            <input\r\n                className=\"checkbox\"\r\n                type=\"checkbox\" \r\n                checked={completed}\r\n                onChange={() => updateTodo(index, text, !completed)}\r\n            />\r\n            <input \r\n                autoFocus \r\n                onChange={(e) => updateTodo(index, e.target.value, completed)} \r\n                onKeyDown={handleKeyDown} \r\n                className={completed ? \"complete\" : \"\"}\r\n                value={text} \r\n            />\r\n            <span className=\"exit\" onClick={handleClick}>Ã—</span>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Todo from \"./Todo\";\r\n\r\nexport default function App() {\r\n    // Gets data from local storage\r\n    const data = localStorage.getItem(\"list\");\r\n    const [list, setList] = useState((data) ? JSON.parse(data) : []);\r\n\r\n    // Updates local storage whenever the component updates\r\n    useEffect (() => {\r\n        // Saves non-empty todos\r\n        const filteredList = list.filter(todo => todo.text !== \"\");\r\n        localStorage.setItem(\"list\", JSON.stringify(filteredList));\r\n    });\r\n\r\n    // Appends new todo to list\r\n    const addTodo = () => {\r\n        setList([...list, {\"text\": \"\", \"completed\": false}]);\r\n    }\r\n\r\n    // Updates a todo\r\n    const updateTodo = (id, newTodo, completed) => {\r\n        const newList = list.map((todo, index) => {\r\n            if (index === id) {\r\n                return {\"text\": newTodo, \"completed\": completed}\r\n            }\r\n            return todo;\r\n        })\r\n        setList(newList);\r\n    }\r\n\r\n    // Deletes a todo\r\n    const deleteTodo = (id) => {\r\n        setList(list.filter((todo, index) => index !== id));\r\n    }\r\n\r\n    /**\r\n     * Creates a list of Todo components using the map method.\r\n     * If the list length is 0, displays that the list is empty.\r\n     */\r\n    const todoList = (list.length === 0) ? <p>such empty</p> : list.map((todo, index) => (\r\n        <Todo key={index} \r\n            index={index} \r\n            text={todo.text} \r\n            completed={todo.completed} \r\n            updateTodo={updateTodo} \r\n            addTodo={addTodo} \r\n            deleteTodo={deleteTodo} \r\n        />\r\n    ));\r\n\r\n    return (\r\n        <div className=\"App col-lg-6 offset-lg-3 col-md-8 offset-md-2\">\r\n            <h1>To Do List</h1><hr/>\r\n            <div>\r\n                {todoList}\r\n            </div>\r\n            <button onClick={addTodo} className=\"btn btn-dark\">+</button>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}